name: build

on:
  workflow_call:

  pull_request:
    types: ["opened", "synchronize"]
    paths-ignore:
      - "README.md"
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - "README.md"

jobs:
  build_win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/cache@v2
        with:
          path: |
            .venv
            .cache
            env
          key: ${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('poetry.lock') }}
            ${{ runner.os }}-
      - name: Install dependencies
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: "true"
          POETRY_CACHE_DIR: .cache
        run: |
          mkdir -p .cache
          ls .cache
          if (-not(Test-Path -Path .cache/upx.exe -PathType Leaf)) {
            echo "Download UPX"
            Invoke-WebRequest -Uri "https://github.com/upx/upx/releases/download/v3.96/upx-3.96-win64.zip" -OutFile "upx.zip"
            Expand-Archive -Path upx.zip
            cp upx/upx-3.96-win64/upx.exe .cache/
          }

          python -m venv env
          ./env/Scripts/pip install --cache-dir .cache poetry
          ./env/Scripts/poetry config --list
          ./env/Scripts/poetry install
      - name: Build .exe
        run: |
          ./env/Scripts/poetry run pyinstaller -w -y --clean --log-level WARN -F --name blackbox-fetch --upx-dir .cache/ ./blackbox_fetch/main.py
          ls dist
      - uses: actions/upload-artifact@v2
        # Upload only on specific branches
        if: endsWith(github.ref, 'master') || endsWith(github.ref, 'dev')
        with:
          name: blackbox_fetch_win
          path: dist/blackbox-fetch.exe

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/cache@v2
        with:
          path: |
            .venv
            .cache
            env
          key: ${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('poetry.lock') }}
            ${{ runner.os }}-
      - name: Install dependencies
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: "true"
          POETRY_CACHE_DIR: .cache
        run: |
          mkdir -p ./cache
          ls .cache
          if [ ! -f ./cache/upx ]; then
            echo "Download UPX"
            wget -O upx.tar.xz https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz
            tar -xvf upx.tar.xz
            cp upx-3.96-amd64_linux/upx ./cache/
          fi
          python -m venv env
          ./env/bin/pip install --cache-dir .cache poetry
          ./env/bin/poetry config --list
          ./env/bin/poetry install
      - name: Build
        run: |
          ./env/bin/poetry run pyinstaller -w -y --clean --log-level WARN --upx-dir .cache/ -F --name blackbox-fetch ./blackbox_fetch/main.py
          ls dist
      - uses: actions/upload-artifact@v2
        # Upload only on specific branches
        if: endsWith(github.ref, 'master') || endsWith(github.ref, 'dev')
        with:
          name: blackbox_fetch_linux
          path: dist/blackbox-fetch